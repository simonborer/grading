import { Qu } from './qu.js';

const a11y = {
    proposal: {
        total: 20,
        req: [
            new Qu("Properly scoped/Reasonably estimated timeline", 2),
            new Qu("Objective/Scope/Questions", 4),
            new Qu("Participants", 2),
            new Qu("Methods", 4),
            new Qu("Metrics", 4),
            new Qu("Would someone be able to run this plan without any further information?", 4 / 3),
            new Qu("Were the provided requirements captured?", 4 / 3),
            new Qu("Did you create confidence that this plan would return valuable insights?", 4 / 3),
            new Qu("Submitted after 6/01", -2)
        ],
        fb: ['How are you going to get accurate data about different age groups with a sample size of ~1 person?', 'make sure that you draw a clear line between each question (what do you want to know?), each method (how will you know it?), and each metrics (how will you measure it?)', 'Your objectives should be represented in your methods', 'Your methods should be captured in your metrics, and your metrics should be generated by your methods.', '"Time on task" - how will you evaluate this? What\'s a good time? What\'s a bad time?', 'Do your best to limit the number of different browsers/devices/operating systems used by your group of users. Cross-browser testing is best left to the QA department and can skew your results, introducing variables which will muddy your conclusions.', 'What system usability scale will you use? There\'s no standard SUS.', 'Describe the users\' technical environment (browser, operating system, etc) so you can account for variables', 'Not sure I understand the logic behind your rating system.', 'A heuristic is not a method, it\'s a good idea.', 'If this test is unmoderated, will you still be available to help users recover from critical errors?', 'So, the big thing here is understanding the purpose of a usability test. You\'re meant to be testing your assumptions about how users will behave. It\'s inappropriate to use the time and resources required for this type of testing to test things that are not aspects of user behaviour, like the loading time of the application. Remove anything that is unrelated to user perception or behaviour from the scope of this test.', 'Having users from different demographics (age, for example) isn\'t necessarily a liability, but it\'s not an asset either. You won\'t be able to draw meaningful conclusions about demographics from a sample size of 1-2 people.', 'A benchmark is for measuring progress. You can\'t measure progress if you don\'t have pre-existing data.', 'You haven\'t captured the requirements I provided.']
    },
    group: {
        total: 25,
        req: [
            new Qu("#1: Visibility of system status // Individual", 1.25),
            new Qu("#1: Visibility of system status // Group", .75),
            new Qu("#2: Match between system and the real world // Individual", 1.25),
            new Qu("#2: Match between system and the real world // Group", .75),
            new Qu("#3: User control and freedom // Individual", 1.25),
            new Qu("#3: User control and freedom // Group", .75),
            new Qu("#4: Consistency and standards // Individual", 1.25),
            new Qu("#4: Consistency and standards // Group", .75),
            new Qu("#5: Error prevention // Individual", 1.25),
            new Qu("#5: Error prevention // Group", .75),
            new Qu("#6: Recognition rather than recall // Individual", 1.25),
            new Qu("#6: Recognition rather than recall // Group", .75),
            new Qu("#7: Flexibility and efficiency of use // Individual", 1.25),
            new Qu("#7: Flexibility and efficiency of use // Group", .75),
            new Qu("#8: Aesthetic and minimalist design // Individual", 1.25),
            new Qu("#8: Aesthetic and minimalist design // Group", .75),
            new Qu("#9: Help users recognize, diagnose, and recover from errors // Individual", 1.25),
            new Qu("#9: Help users recognize, diagnose, and recover from errors // Group", .75),
            new Qu("#10: Help and documentation // Individual", 1.25),
            new Qu("#10: Help and documentation // Group", .75),
            new Qu("Readability - individual submission", 1),
            new Qu("Readability - group submission", 4)
        ],
        fb: ['Some conflation of the website with the browser (i.e. CTRL+R is not provided by the website - it would only be notable if the website _prevented_ browser behaviour).', 'I feel like you could\'ve gone a little further in not just passively watching for issues, but exploring and predicting issues, or expanding your ideas of where the heuristics might apply.', 'In a few instances, I would\'ve expected your group to collectively be able to produce more substantial analysis.']
    },
    reading2: {
        total: 5,
        req: [
            new Qu("Engaged with the material", 3),
            new Qu("Applied to web work", 2),
            new Qu("Submitted after 5/21", -1)
        ],
        fb: ['How would it change your workflow if you had a visually impaired teammate? Beyond just websites, would it change how you code, document, write emails, etc.?']
    },
    reading3: {
        total: 5,
        req: [
            new Qu("Engaged with the material", 3),
            new Qu("Applied to web work", 2),
            new Qu("Submitted after 5/28", -1)
        ],
        fb: ["Could've dug a little deeper (where can we see this effect in action on the web? what opportunities might be missed?), but still good work."]
    },
    reading4: {
        total: 5,
        req: [
            new Qu("Engaged with the material", 3),
            new Qu("Applied to web work", 2),
            new Qu("Submitted after 6/4", -1)
        ],
        fb: ["Definitely look into automation (and other forms of testing) and how it can make these things rely less on our memory.", "Glad this helped with some prioritization :)", "Don't forget that accessibility errors aren't necessarily the fault of a particular framework, but the result of the community that builds them and how they're implemented.", "don't forget that web developers only have a certain degree of autonomy when it comes to deciding how something will be coded, and for some aspects of accessibility you need to get other departments (like content and design) on board.", "Asking the right questions."]
    },
    reading5: {
        total: 5,
        req: [
            new Qu("Engaged with the material", 3),
            new Qu("Applied to web work", 2),
            new Qu("Submitted after 6/11", -1)
        ]
    },
    reading6: {
        total: 5,
        req: [
            new Qu("Engaged with the material", 3),
            new Qu("Applied to web work", 2),
            new Qu("Submitted after 6/18", -1)
        ],
        fb: ["I think we'd all be lucky to have someone put as much effort into communicating with us as Dickson does with his plants."]
    },
    final: {
        total: 25,
        req: [
            new Qu("Presentation: Speaking to the goals", 5 / 4),
            new Qu("Presentation: Talking about the methods", 5 / 4),
            new Qu("Presentation: Walking through the results", 10 / 4),
            new Qu("Presentation: Strong conclusions", 10 / 4),
            new Qu("Presentation: Reasonable recommendations", 10 / 4),
            new Qu("Written: Speaking to the goals", 10 / 4),
            new Qu("Written: Talking about the methods", 10 / 4),
            new Qu("Written: Walking through the results", 5 / 4),
            new Qu("Written: Strong conclusions", 10 / 4),
            new Qu("Written: Reasonable recommendations", 5 / 4),
            new Qu("Written: Documentation", 20 / 4),
            new Qu("BONUS: Spoke in the final class time about your experiences administering the test.", 3 / 4)],
        fb: ["The maximum presentation time was 5 minutes", "You could've focussed your presentation more on what can be done, and less on the particular details of how you conducted the tests that lead to those conclusions - that's what the report and documentation is for.", "I would've liked to see you make your recommendations more usable - prioritizing, and giving recommendations on implementation including effort and impact.", "Sharing your camera and actually showing the application made your presentation much stronger than a simple slideshow."]
    }
};

export { a11y };